"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var del = require("del");
var vinylPaths = require("vinyl-paths");
var path = require("path");
var fs = require("fs-extra");
function replaceFileIfExists(sourcePath, targetPath) {
    if (!fs.existsSync(sourcePath)) {
        return;
    }
    var copyOptions = {
        clobber: true,
    };
    fs.copySync(sourcePath, targetPath, copyOptions);
}
function backupFile(filePath) {
    var folderPath = path.dirname(filePath);
    var originalFileExtension = path.extname(filePath);
    var originalFileName = path.basename(filePath, originalFileExtension);
    var backupFileName = originalFileName + "_BACKUP" + originalFileExtension;
    var backupFilePath = path.resolve(folderPath, backupFileName);
    replaceFileIfExists(filePath, backupFilePath);
}
function generate(gulp, config, gulptraum) {
    var pathsToCopy = [
        '../setup/tslint.json',
    ];
    var setupOutputFolderPath = path.resolve(config.paths.root, config.paths.setup);
    gulptraum.task('setup-dev-typescript-clean', {
        help: 'Cleans all code style files generated by the TypeScript plugin'
    }, function () {
        var cleanPaths = pathsToCopy.map(function (pathToCopy) {
            return path.resolve(setupOutputFolderPath, pathToCopy);
        });
        return gulp.src(cleanPaths)
            .pipe(vinylPaths(del));
    });
    gulptraum.task('setup-dev-typescript-build', {
        help: 'Copies tslint.json to your project folder'
    }, function () {
        pathsToCopy.forEach(function (pathToCopy) {
            var originalFileExtension = path.extname(pathToCopy);
            var originalFileName = path.basename(pathToCopy, originalFileExtension);
            var targetFileName = "" + originalFileName + originalFileExtension;
            var sourcePath = path.resolve(__dirname, pathToCopy);
            var targetPath = path.resolve(setupOutputFolderPath, targetFileName);
            if (config.backupSetupFiles) {
                backupFile(targetPath);
            }
            replaceFileIfExists(sourcePath, targetPath);
        });
    });
    gulptraum.task('setup-dev-typescript', {
        help: 'Copies TypeScript code styles files to your project folder'
    }, function (callback) {
        var tasksToRun = [];
        if (!config.backupSetupFiles) {
            tasksToRun.push('setup-dev-typescript-clean');
        }
        tasksToRun.push('setup-dev-typescript-build');
        return gulptraum.gulpAdapter.runTasksSequential(tasksToRun, callback);
    });
}
exports.generate = generate;

//# sourceMappingURL=setup_dev.js.map
